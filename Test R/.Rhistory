saham.matrix <- matrix(saham, byrow = TRUE, nrow = 2)
View(saham.matrix)
View(saham.matrix)
hari <- c('Senin','Selasa','Rabu','Kamis','Jumat')
bil <- 1:20
# matriks.bil <- matrix(bil, nrow = 4, byrow = TRUE)
matriks.bil <- matrix(bil, nrow = 4)
# Saham
TLKM <- c(3000, 3100, 3050, 3020, 3200)
KLBF <- c(324, 343, 300, 321, 355)
saham <- c(TLKM, KLBF)
saham.matrix <- matrix(saham, byrow = TRUE, nrow = 2)
hari <- c('Senin','Selasa','Rabu','Kamis','Jumat')
nama.saham <- c('TLKM','KLBF')
colnames(saham.matrix) <- hari
rownames(saham.matrix) <- nama.saham
bil <- 1:20
# matriks.bil <- matrix(bil, nrow = 4, byrow = TRUE)
matriks.bil <- matrix(bil, nrow = 4)
# Saham
TLKM <- c(3000, 3100, 3050, 3020, 3200)
KLBF <- c(324, 343, 300, 321, 355)
saham <- c(TLKM, KLBF)
saham.matrix <- matrix(saham, byrow = TRUE, nrow = 2)
hari <- c('Senin','Selasa','Rabu','Kamis','Jumat')
nama.saham <- c('TLKM','KLBF')
colnames(saham.matrix) <- hari
rownames(saham.matrix) <- nama.saham
BBCA <- c(1501, 1510, 1490, 1520, 1500)
# rbind, tambah baris
# cbind, tambah kolom
saham.baru <- rbind(saham.matrix, BBCA)
View(saham.baru)
View(saham.baru)
colSums(saham.baru)
rowSums(saham.baru)
bil <- 1:20
# matriks.bil <- matrix(bil, nrow = 4, byrow = TRUE)
matriks.bil <- matrix(bil, nrow = 4)
# Saham
TLKM <- c(3000, 3100, 3050, 3020, 3200)
KLBF <- c(324, 343, 300, 321, 355)
saham <- c(TLKM, KLBF)
saham.matrix <- matrix(saham, byrow = TRUE, nrow = 2)
hari <- c('Senin','Selasa','Rabu','Kamis','Jumat')
nama.saham <- c('TLKM','KLBF')
colnames(saham.matrix) <- hari
rownames(saham.matrix) <- nama.saham
BBCA <- c(1501, 1510, 1490, 1520, 1500)
# rbind, tambah baris
# cbind, tambah kolom
saham.baru <- rbind(saham.matrix, BBCA)
# colSums, jumlah semua variabel tiap kolom
colSums(saham.baru)
rowSums(saham.baru)
colMeans(saham.baru)
rowMeans(saham.baru)
help(colSums)
help(colsums)
help(colSums)
Rataan <- rowMeans(saham.baru)
saham.baru <- cbind(saham.baru, Rataan)
View(saham.baru)
View(saham.baru)
bil <- matriks(1:25, byrow=TRUE, nrow=5)
bil
bil+bil
bil*bil
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
bil+bil
bil*bil
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
# Operasi matriks
bil+bil
bil*bil
# Operasi aljabar linear
bil %+% bil
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
# Operasi matriks
bil+bil
bil*bil
# Operasi aljabar linear
bil %*% bil
View(bil)
View(bil)
1/bil
bil^2
# Slicing and Indexing
# bil[baris, kolom]
bil[1,]
bil[4:5,]
bil[c(2,4),]
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
# Operasi matriks
bil+bil
bil*bil
# Operasi aljabar linear
bil %*% bil
1/bil
bil^2
# Slicing and Indexing
# bil[baris, kolom]
bil[1,] # baris 1
bil[4:5,] # baris 4 sampai baris 5
bil[c(2,4),] # baris 2 dan baris 4
bil[c(1,3,4),]
bil[c(1,3,4),] # baris 1,3, dan 4
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
# Operasi matriks
bil+bil
bil*bil
# Operasi aljabar linear
bil %*% bil
1/bil
bil^2
# Slicing and Indexing
# bil[baris, kolom]
bil[1,] # baris 1
bil[4:5,] # baris 4 sampai baris 5
bil[c(2,4),] # baris 2 dan baris 4
bil[c(1,3,4),] # baris 1,3, dan 4
bil[c(1,3,4), c[2,4,5]] # baris 1,3, dan 4 dengan kolom 2,4, dan 5
View(bil)
View(bil)
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
# Operasi matriks
bil+bil
bil*bil
# Operasi aljabar linear
bil %*% bil
1/bil
bil^2
# Slicing and Indexing
# bil[baris, kolom]
bil[1,] # baris 1
bil[4:5,] # baris 4 sampai baris 5
bil[c(2,4),] # baris 2 dan baris 4
bil[c(1,3,4),] # baris 1,3, dan 4
bil[c(1,3,4), c(2,4,5)] # baris 1,3, dan 4 dengan kolom 2,4, dan 5
View(bil)
View(bil)
help(rnorm)
# Nominal (makanan & minuman)
barang <- c('makanan', 'minuman', 'minuman', 'minuman', 'makanan', 'makanan', 'makanan', 'minuman')
# Nominal (makanan & minuman)
barang <- c('makanan', 'minuman', 'minuman', 'minuman', 'makanan', 'makanan', 'makanan', 'minuman')
# Nominal (makanan & minuman)
barang <- c('makanan', 'minuman', 'minuman', 'minuman', 'makanan', 'makanan', 'minuman')
# Nominal (makanan & minuman)
barang <- c('makanan', 'minuman', 'minuman', 'minuman', 'makanan', 'makanan', 'minuman')
kategori.barang <- factor(barang)
kategori.barang
kategori.barang
# Ordinal (memiliki tingkat)
rasa <- c('payah', 'maknyus', 'mantap', 'biasa', 'biasa', 'tidak enak', 'payah')
# Nominal (makanan & minuman)
barang <- c('makanan', 'minuman', 'minuman', 'minuman', 'makanan', 'makanan', 'minuman')
kategori.barang <- factor(barang)
# Ordinal (memiliki tingkat)
rasa <- c('payah', 'maknyus', 'mantap', 'biasa', 'biasa', 'tidak enak', 'payah')
kategori.rasa <- factor(rasa, ordered = TRUE,
levels = c('payah', 'tidak enak', 'biasa', 'mantap', 'maknyus'))
kategori.rasa
data()
df <- iris
View(df)
View(df)
help(iris)
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df2 <- mtcars
?mtcars
View(df2)
View(df2)
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df <- iris
df2 <- mtcars
str(df)
str(df2)
df3 <- state.x77
View(df3)
View(df3)
str(df3)
help(str)
str(df3)
sumarry(df3)
sumary(df3)
sumarry(df3)
summary(df3)
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df <- iris
str(df)
summary(df)
df2 <- mtcars
str(df2)
sumarry(df2)
df3 <- state.x77
str(df3)
summary(df3)
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df <- iris
str(df)
summary(df)
df2 <- mtcars
str(df2)
sumarry(df2)
df3 <- state.x77
str(df3)
summary(df3)
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df <- iris
str(df)
summary(df)
df2 <- mtcars
str(df2)
summary(df2)
df3 <- state.x77
str(df3)
summary(df3)
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df <- iris
str(df)
summary(df)
df2 <- mtcars
str(df2)
summary(df2)
df3 <- state.x77
str(df3)
summary(df3)
golongan <- factor(c('gemuk', 'kurus', 'kurus', 'sedang', 'sedang'))
cowok <- c('Bambang', 'Joko', 'Budi', 'Anton', 'Koko')
berat <- c(100, 50, 60, 70, 86)
golongan <- factor(c('gemuk', 'kurus', 'kurus', 'sedang', 'sedang'))
kelompok <- data.frame(cowok, berat, golongan)
View(kelompok)
View(kelompok)
str(kelompok)
sumarry(kelompok)
summary(kelompok)
kelompok[1:4,]
kelompok[1:4, 2:3]
kelompok[c(1,3),]
kelompok[3,2]
kelompok[3,3]
subset(kelompok, golongan == 'kurus')
kelompok
class(subset(kelompok, golongan == 'kurus'))
subset(kelompok, berat<80)
# List = format data yang berisi tipe data campuran (vektor, matriks, data frame, list)
v <- c(1,2,3,4,5)
m <- matrix(1:20, nrow=4)
df <- iris
list.saya <- list(v, m, df)
View(list.saya)
View(list.saya)
list.saya
list.baru <- list(nama.v = v, nama.m = m, nama.df = df)
View(list.baru)
View(list.saya)
View(list.saya)
View(list.baru)
View(list.baru)
list.saya[1]
View(list.baru)
View(list.baru)
View(list.saya)
View(list.saya)
View(list.saya)
list.saya[1]
list.saya[[1]]
# List = format data yang berisi tipe data campuran (vektor, matriks, data frame, list)
v <- c(1,2,3,4,5)
m <- matrix(1:20, nrow=4)
df <- iris
list.saya <- list(v, m, df)
# With named index
list.baru <- list(nama.v = v, nama.m = m, nama.df = df)
# Indexing
# list.baru[1] SALAH!!! (Menghasilkan tipe data list)
list.baru[[1]] # BENAR (Menghasilkan tipe data numeric)
# list.
# List = format data yang berisi tipe data campuran (vektor, matriks, data frame, list)
v <- c(1,2,3,4,5)
m <- matrix(1:20, nrow=4)
df <- iris
list.saya <- list(v, m, df)
# With named index
list.baru <- list(nama.v = v, nama.m = m, nama.df = df)
# Indexing
# list.baru[1] SALAH!!! (Menghasilkan tipe data list)
list.baru[[1]] # BENAR (Menghasilkan tipe data numeric)
class(list.baru[[1]])
# list.
View(list.baru)
View(list.baru)
dataset()
dataset()
dataframe()
datasets()
iris?
?iris
?state.x77
data()
data()
iris()
iris
?iris
read <- read.csv('example_datasets/kapal_titanic.csv')
View(read)
class(baru)
class(read)
baru <- read.csv('example_datasets/kapal_titanic.csv')
View(baru)
View(baru)
head(baru)
tail(baru)
# Reading csv
baru <- read.csv('example_datasets/kapal_titanic.csv')
head(baru) # 6 data pertama
tail(baru) # 6 data kedua
# Export csv
write.csv(baru, 'testExport.csv')
help("write.csv")
help("read.csv")
# Export csv
write.csv(baru, 'example_datasets/testExport.csv')
install.packages("readxl")
install.packages("xlsx")
library(readxl)
# install readxl
install.packages("readxl")
# enable readxl
library(readxl)
# install xlsx
install.packages("xlsx")
# enable xlsx
library(xlsx)
excel_sheets('example_datasets/dataexcel.xlsx')
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheeet1")
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
# import
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
# import
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
# check sheet
excel_sheets('example_datasets/dataexcel.xlsx')
# import
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
# Import csv
baru <- read.csv('example_datasets/kapal_titanic.csv')
# CSV
# Import csv
baru <- read.csv('example_datasets/kapal_titanic.csv')
head(baru) # 6 data pertama
tail(baru) # 6 data kedua
# Export csv
write.csv(baru, 'example_datasets/testExport.csv')
help("write.csv")
# ------------------------------------------------
# XLSX
# 2 library: readxl, xlsx
# install readxl
install.packages("readxl")
# enable readxl
library(readxl)
# check sheet
excel_sheets('example_datasets/dataexcel.xlsx')
# import
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
# install xlsx
install.packages("xlsx")
# enable xlsx
library(xlsx)
install.packages("readxl")
# CSV
# Import csv
baru <- read.csv('example_datasets/kapal_titanic.csv')
head(baru) # 6 data pertama
tail(baru) # 6 data kedua
# Export csv
write.csv(baru, 'example_datasets/testExport.csv')
help("write.csv")
# ------------------------------------------------
# XLSX
# 2 library: readxl, xlsx
# install readxl
install.packages("readxl")
# enable readxl
library(readxl)
# check sheet
excel_sheets('example_datasets/dataexcel.xlsx')
# import
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
# install xlsx
install.packages("xlsx")
# enable xlsx
library(xlsx)
# Import csv
baru <- read.csv('example_datasets/kapal_titanic.csv')
# Import csv
baru <- read.csv('example_datasets/kapal_titanic.csv')
# check sheet
excel_sheets('example_datasets/dataexcel.xlsx')
# import
excelbaru <- read_excel('example_datasets/dataexcel.xlsx', sheet = "Sheet1")
View(excelbaru)
View(baru)
View(baru)
View(baru)
View(baru)
exceldua <- read.xlsx('example_datasets/dataexcel.xlsx', sheetName = 'Sheet1')
View(exceldua)
View(exceldua)
class(exceldua)
class(excelbaru)
(excelbaru, 'example_datasets/excelTestExport.xlsx')
# Export
write.xlsx(excelbaru, 'example_datasets/excelTestExport.xlsx')
str(df3)
df3 <- state.x77
str(df3)
subset(kelompok, golongan == 'kurus') #menghasilkan dataframe
# Matriks memiliki 1 tipe data
# Dataframe memiliki lebih dari 1 tipe data
df <- iris
str(df)
summary(df)
df2 <- mtcars
str(df2)
summary(df2)
df3 <- state.x77
str(df3)
summary(df3)
# Contoh pembuatan dataframe
cowok <- c('Bambang', 'Joko', 'Budi', 'Anton', 'Koko')
berat <- c(100, 50, 60, 70, 86)
golongan <- factor(c('gemuk', 'kurus', 'kurus', 'sedang', 'sedang'))
kelompok <- data.frame(cowok, berat, golongan)
str(kelompok)
summary(kelompok)
# Slicing
kelompok[3,2] #menghasilkan numerik
kelompok[3,] #menghasilkan dataframe
kelompok[c(1,3,4), c(1,3)]
kelompok['berat']
kelompok$berat #menghasilkan vektor
subset(kelompok, golongan == 'kurus') #menghasilkan dataframe
subset(kelompok, berat<80)
kelompok['berat']
kelompok['berat', 'golongan']
kelompok['berat']
class(kelompok['berat'])
subset(kelompok, golongan == 'kurus') #menghasilkan dataframe
# Slicing
kelompok[3,2] #menghasilkan numerik
kelompok[3,] #menghasilkan dataframe
kelompok[3,] #menghasilkan dataframe
kelompok[,3]
class(kelompok[,3])
subset(kelompok, golongan == 'kurus') #menghasilkan dataframe
---
title: "Stock Price Data"
output:
html_document:
df_print: paged
html_notebook: default
pdf_document: default
---
Bootstrapping
```{r}
library(pacman)
pacman::p_load(data.table, fixest, BatchGetSymbols, finreportr, ggplot2, lubridate)
```
Download stock price data
```{r stock-price, warning = FALSE, message = FALSE}
## Set parameters
first.date <- Sys.Date() - 2500
last.date <- Sys.Date()
freq.data <- "monthly"
tickers <- c("TSLA", "NIO", "PRPL", "AAPL", "SNAP", "MU", "AMD",
"NVDA", "TWTR")
## Get Stock Prices
stocks <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
do.cache = FALSE,
thresh.bad.data = 0)
bil
bil <- matrix(1:25, byrow=TRUE, nrow=5)
bil
bil <- 1:20
# matriks.bil <- matrix(bil, nrow = 4, byrow = TRUE)
matriks.bil <- matrix(bil, nrow = 4)
# Saham4
TLKM <- c(3000, 3100, 3050, 3020, 3200)
View(matriks.bil)
KLBF <- c(324, 343, 300, 321, 355)
saham <- c(TLKM, KLBF)
saham.matrix <- matrix(saham, byrow = TRUE, nrow = 2)
View(saham.matrix)
